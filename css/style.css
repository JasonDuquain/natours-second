@-webkit-keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem);
            transform: translateX(-10rem);
  }
  80% {
    -webkit-transform: translateX(1rem);
            transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

@keyframes moveInLeft {
  0% {
    opacity: 0;
    -webkit-transform: translateX(-10rem);
            transform: translateX(-10rem);
  }
  80% {
    -webkit-transform: translateX(1rem);
            transform: translateX(1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

@-webkit-keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    -webkit-transform: translateX(10rem);
            transform: translateX(10rem);
  }
  80% {
    -webkit-transform: translateX(-1rem);
            transform: translateX(-1rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translate(0);
            transform: translate(0);
  }
}

@-webkit-keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

@keyframes moveInBottom {
  0% {
    opacity: 0;
    -webkit-transform: translateY(3rem);
            transform: translateY(3rem);
  }
  100% {
    opacity: 1;
    -webkit-transform: translateY(0);
            transform: translateY(0);
  }
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  -webkit-box-sizing: inherit;
          box-sizing: inherit;
  text-decoration: none;
  list-style: none;
}

html {
  font-size: 62.5%;
  font-family: "Lato", sans-serif;
}

body {
  -webkit-box-sizing: border-box;
          box-sizing: border-box;
  font-weight: 400;
  /* font-size: 16px; */
  line-height: 1.7;
  color: #777;
  padding: 3rem;
}

body {
  font-family: "Lato", sans-serif;
}

.heading-primary {
  color: #fff;
  text-transform: uppercase;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  margin-bottom: 6rem;
}

.heading-primary--main {
  display: block;
  font-size: 6rem;
  font-weight: 400;
  letter-spacing: 3.5rem;
  -webkit-animation: moveInLeft 1000ms ease-out;
          animation: moveInLeft 1000ms ease-out;
}

.heading-primary--sub {
  display: block;
  font-size: 2rem;
  font-weight: 700;
  letter-spacing: 1.7rem;
  -webkit-animation: moveInRight 1000ms ease-out;
          animation: moveInRight 1000ms ease-out;
}

.heading-secondary {
  font-size: 3.5rem;
  text-transform: uppercase;
  font-weight: 700;
  display: inline-block;
  background-image: -webkit-gradient(linear, left top, right top, from(#7ed56f), to(#28b485));
  background-image: linear-gradient(to right, #7ed56f, #28b485);
  -webkit-background-clip: text;
  color: transparent;
  letter-spacing: 2px;
  -webkit-transition: all 200ms 50ms;
  transition: all 200ms 50ms;
}

.heading-secondary:hover {
  -webkit-transform: skewY(2deg) skewX(15deg) scale(1.1);
          transform: skewY(2deg) skewX(15deg) scale(1.1);
  text-shadow: 0.5rem 1rem 2rem rgba(0, 0, 0, 0.2);
}

.heading-tertiary {
  font-size: 1.6rem;
  font-weight: 700;
  text-transform: uppercase;
}

.paragraph {
  font-size: 1.6rem;
}

.paragraph:not(:last-of-type) {
  margin-bottom: 3rem;
}

.u-center-text {
  text-align: center;
}

.u-margin-top-huge {
  margin-top: 8rem;
}

.u-margin-bottom-big {
  margin-bottom: 8rem;
}

.u-margin-bottom-small {
  margin-bottom: 1.5rem;
}

.bg-video {
  position: absolute;
  top: 0;
  left: 0;
  height: 100%;
  width: 100%;
  z-index: -1;
  opacity: .15;
  overflow: hidden;
}

.bg-video__content {
  height: 100%;
  width: 100%;
  -o-object-fit: cover;
     object-fit: cover;
}

.btn:link, .btn:visited, .btn {
  -webkit-transition: -webkit-transform 200ms 50ms;
  transition: -webkit-transform 200ms 50ms;
  transition: transform 200ms 50ms;
  transition: transform 200ms 50ms, -webkit-transform 200ms 50ms;
  text-transform: uppercase;
  padding: 1.5rem 4rem;
  display: inline-block;
  border-radius: 99em;
  -webkit-transition: all 200ms;
  transition: all 200ms;
  position: relative;
  font-size: 1.6rem;
}

.btn:hover {
  -webkit-transform: translateY(-3px);
          transform: translateY(-3px);
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.2);
}

.btn:active, .btn:focus {
  -webkit-transform: translateY(-1px);
          transform: translateY(-1px);
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.2);
}

.btn--white {
  background-color: #fff;
  color: #777;
}

.btn--white::after {
  background-color: #fff;
}

.btn--green {
  background-color: #55c57a;
  color: #fff;
}

.btn--green::after {
  background-color: #55c57a;
}

.btn::after {
  content: "";
  display: inline-block;
  height: 100%;
  width: 100%;
  border-radius: 99em;
  position: absolute;
  top: 0;
  left: 0;
  z-index: -1;
  -webkit-transition: all 400ms;
  transition: all 400ms;
}

.btn:hover::after {
  -webkit-transform: scale(1.4, 1.6);
          transform: scale(1.4, 1.6);
  opacity: 0;
}

.btn--animated {
  -webkit-animation: moveInBottom 500ms ease-out 75ms backwards;
          animation: moveInBottom 500ms ease-out 75ms backwards;
}

.btn-text:link, .btn-text:visited {
  font-size: 1.6rem;
  color: #55c57a;
  display: inline-block;
  border-bottom: 1px solid currentColor;
  padding: 3px;
  -webkit-transition: all 200ms 50ms;
  transition: all 200ms 50ms;
}

.btn-text:hover {
  background-color: #55c57a;
  color: #fff;
  -webkit-box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1rem 2rem rgba(0, 0, 0, 0.15);
  -webkit-transform: translateY(-2px);
          transform: translateY(-2px);
}

.btn-text:active {
  -webkit-box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 0.5rem 1rem rgba(0, 0, 0, 0.15);
  -webkit-transform: translateY(0);
          transform: translateY(0);
}

.card {
  -webkit-perspective: 150rem;
          perspective: 150rem;
  position: relative;
  height: 52rem;
}

.card__side {
  height: 52rem;
  -webkit-transition: all 800ms ease-out 50ms;
  transition: all 800ms ease-out 50ms;
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  border-radius: 3px;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  overflow: hidden;
}

.card__side--front {
  background-color: #fff;
}

.card__side--back {
  -webkit-transform: rotateY(180deg);
          transform: rotateY(180deg);
}

.card__side--back-1 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#ffb900), to(#ff7730));
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730);
}

.card__side--back-2 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#7ed56f), to(#28b485));
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485);
}

.card__side--back-3 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#2998ff), to(#5643fa));
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa);
}

.card:hover .card__side--front {
  -webkit-transform: rotateY(-180deg);
          transform: rotateY(-180deg);
}

.card:hover .card__side--back {
  -webkit-transform: rotateY(0);
          transform: rotateY(0);
}

.card__picture {
  background-size: cover;
  height: 23rem;
  background-blend-mode: screen;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 85%, 0 100%);
  border-radius: 3px 3px 0 0;
}

.card__picture--1 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#ffb900), to(#ff7730)), url(../img/nat-5.jpg);
  background-image: linear-gradient(to right bottom, #ffb900, #ff7730), url(../img/nat-5.jpg);
}

.card__picture--2 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#7ed56f), to(#28b485)), url(../img/nat-6.jpg);
  background-image: linear-gradient(to right bottom, #7ed56f, #28b485), url(../img/nat-6.jpg);
}

.card__picture--3 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(#2998ff), to(#5643fa)), url(../img/nat-7.jpg);
  background-image: linear-gradient(to right bottom, #2998ff, #5643fa), url(../img/nat-7.jpg);
}

.card__heading {
  font-size: 2.8rem;
  font-weight: 300;
  text-transform: uppercase;
  color: #fff;
  position: absolute;
  top: 12rem;
  right: 2rem;
  text-align: right;
  width: 75%;
}

.card__heading-span {
  padding: 1rem 1.5rem;
  -webkit-box-decoration-break: clone;
          box-decoration-break: clone;
}

.card__heading-span--1 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(255, 185, 0, 0.85)), to(rgba(255, 119, 48, 0.85)));
  background-image: linear-gradient(to right bottom, rgba(255, 185, 0, 0.85), rgba(255, 119, 48, 0.85));
}

.card__heading-span--2 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.85)), to(rgba(40, 180, 133, 0.85)));
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.85), rgba(40, 180, 133, 0.85));
}

.card__heading-span--3 {
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(41, 152, 255, 0.85)), to(rgba(86, 67, 250, 0.85)));
  background-image: linear-gradient(to right bottom, rgba(41, 152, 255, 0.85), rgba(86, 67, 250, 0.85));
}

.card__details {
  padding: 3rem;
}

.card__details ul {
  width: 80%;
  margin: 0 auto;
}

.card__details ul li {
  text-align: center;
  font-size: 1.5rem;
  padding: 1rem;
}

.card__details ul li:not(:last-child) {
  border-bottom: 1px solid #eee;
}

.card__cta {
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  width: 90%;
  text-align: center;
}

.card__price-box {
  text-align: center;
  margin-bottom: 8rem;
  color: #fff;
}

.card__price-only {
  font-size: 1.4rem;
  text-transform: uppercase;
}

.card__price-value {
  font-size: 6rem;
  font-weight: 100;
}

.composition {
  position: relative;
}

.composition__photo {
  width: 55%;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.4);
  border-radius: 2px;
  position: absolute;
  -webkit-transition: all 200ms 50ms;
  transition: all 200ms 50ms;
  outline-offset: 2rem;
}

.composition__photo--p1 {
  left: 0;
  top: -2rem;
}

.composition__photo--p2 {
  right: 0;
  top: 2rem;
}

.composition__photo--p3 {
  left: 20%;
  top: 10rem;
}

.composition__photo:hover {
  outline: 1.5rem solid #55c57a;
  -webkit-transform: scale(1.05) translateY(-0.5rem);
          transform: scale(1.05) translateY(-0.5rem);
  -webkit-box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
          box-shadow: 0 2.5rem 4rem rgba(0, 0, 0, 0.5);
  z-index: 20;
}

.composition:hover .composition__photo:not(:hover) {
  -webkit-transform: scale(0.95);
          transform: scale(0.95);
}

.feature-box {
  background-color: rgba(255, 255, 255, 0.8);
  font-size: 1.5rem;
  padding: 2.5rem;
  text-align: center;
  border-radius: 3px;
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
  -webkit-transition: -webkit-transform 300ms ease-in 50ms;
  transition: -webkit-transform 300ms ease-in 50ms;
  transition: transform 300ms ease-in 50ms;
  transition: transform 300ms ease-in 50ms, -webkit-transform 300ms ease-in 50ms;
}

.feature-box__icon {
  font-size: 6rem;
  margin-bottom: .5rem;
  display: inline-block;
  -webkit-background-clip: text;
  background-image: -webkit-gradient(linear, left top, right top, from(#55c57a), to(#28b485));
  background-image: linear-gradient(to right, #55c57a, #28b485);
  color: transparent;
}

.feature-box:hover, .feature-box:focus {
  -webkit-transform: translateY(-1.5rem) scale(1.03);
          transform: translateY(-1.5rem) scale(1.03);
}

.form__input {
  -webkit-transition: all 300ms;
  transition: all 300ms;
}

.form__label {
  -webkit-transition: all 300ms;
  transition: all 300ms;
}

.form__radio-button::after {
  content: "";
}

.popup__content {
  -webkit-transition: all 500ms 200ms;
  transition: all 500ms 200ms;
}

.story {
  width: 75%;
  margin: 0 auto;
  -webkit-box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
          box-shadow: 0 3rem 6rem rgba(0, 0, 0, 0.1);
  background-color: rgba(255, 255, 255, 0.6);
  border-radius: 3px;
  padding: 6rem;
  padding-left: 9rem;
  font-size: 1.6rem;
  -webkit-transform: skewX(-12deg);
          transform: skewX(-12deg);
}

.story > * {
  -webkit-transform: skewX(12deg);
          transform: skewX(12deg);
}

.story__shape {
  width: 15rem;
  height: 15rem;
  float: left;
  shape-outside: circle(50% at 50% 50%);
  -webkit-clip-path: circle(50% at 50% 50%);
          clip-path: circle(50% at 50% 50%);
  -webkit-transform: translateX(-3rem) skewX(12deg);
          transform: translateX(-3rem) skewX(12deg);
  position: relative;
}

.story__img {
  height: 100%;
  -webkit-transform: translateX(-4rem) scale(1.4);
          transform: translateX(-4rem) scale(1.4);
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
  -webkit-transition: all 300ms ease-out;
  transition: all 300ms ease-out;
}

.story__caption {
  -webkit-transition: all 500ms;
  transition: all 500ms;
  position: absolute;
  top: 50%;
  left: 50%;
  -webkit-transform: translate(-50%, 20%);
          transform: translate(-50%, 20%);
  color: #fff;
  font-size: 1.7rem;
  text-align: center;
  opacity: 0;
  -webkit-backface-visibility: hidden;
          backface-visibility: hidden;
}

.story:hover .story__caption {
  opacity: 1;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
}

.story:hover .story__img {
  -webkit-transform: translateX(-4rem) scale(1);
          transform: translateX(-4rem) scale(1);
  -webkit-filter: blur(0.2rem) brightness(80%);
          filter: blur(0.2rem) brightness(80%);
}

.footer__link:link, .footer__link:visited {
  -webkit-transition: all 200ms;
  transition: all 200ms;
}

[class^="row"] {
  max-width: 114rem;
  margin: 0 auto;
}

.row-first, .row-sixth {
  display: grid;
  grid-template-columns: 1fr 1fr;
  grid-column-gap: 2rem;
}

.row-second {
  display: grid;
  grid-template-columns: repeat(4, 1fr);
  grid-column-gap: 6rem;
}

.row-third {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  grid-column-gap: 6rem;
}

.row-fourth + .row-fourth {
  margin-top: 6rem;
}

.header {
  height: 95vh;
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.8)), to(rgba(40, 180, 133, 0.8))), url(../img/hero.jpg);
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/hero.jpg);
  background-size: cover;
  background-position: top;
  -webkit-clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
          clip-path: polygon(0 0, 100% 0, 100% 75vh, 0 100%);
  position: relative;
}

.header__logo-box {
  position: absolute;
  top: 4rem;
  left: 4rem;
}

.header__logo {
  height: 3.5rem;
}

.header__text-box {
  position: absolute;
  top: 40%;
  left: 50%;
  -webkit-transform: translate(-50%, -50%);
          transform: translate(-50%, -50%);
  text-align: center;
}

.navigation__link:link, .navigation__link:visited {
  -webkit-transition: all 400ms;
  transition: all 400ms;
}

.navigation__icon::before, .navigation__icon::after {
  content: "";
  -webkit-transition: all 200ms;
  transition: all 200ms;
}

.section-about {
  background-color: #f7f7f7;
  padding: 25rem 0;
  margin-top: -20vh;
}

.section-features {
  padding: 20rem 0;
  background-image: -webkit-gradient(linear, left top, right bottom, from(rgba(126, 213, 111, 0.8)), to(rgba(40, 180, 133, 0.8))), url(../img/nat-4.jpg);
  background-image: linear-gradient(to right bottom, rgba(126, 213, 111, 0.8), rgba(40, 180, 133, 0.8)), url(../img/nat-4.jpg);
  background-size: cover;
  -webkit-transform: skewY(-7deg);
          transform: skewY(-7deg);
  margin-top: -10rem;
}

.section-features > * {
  -webkit-transform: skewY(7deg);
          transform: skewY(7deg);
}

.section-tours {
  background-color: #f7f7f7;
  padding: 25rem 0 15rem 0;
  margin-top: -10rem;
}

.section-stories {
  padding: 15rem 0;
  position: relative;
}

.book {
  -webkit-box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
          box-shadow: 0 1.5rem 4rem rgba(0, 0, 0, 0.15);
}

/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
